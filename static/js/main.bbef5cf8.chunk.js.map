{"version":3,"sources":["components/Table.js","components/Header.js","action.js","components/App.js","index.js"],"names":["Table","grid","styleForBlocks","map","arr","el","toString","console","log","className","style","backgroundColor","Header","score","bestScore","generateRandomElementInArray","Math","floor","random","length","isGameOver","i","j","error","fillSpots","spot","emptySpots","push","spotNumber","matrixTraversal","traversedMatrix","zeroPadding","pushSide","concat","slideRight","filter","resArr","slideLeft","App","props","newGameBtnOnClick","tempScore","tempGrid","state","localStorage","setItem","setState","gameOvermessage","a","getItem","gameOverFlag","window","addEventListener","event","key","temp","slideRes","pushingDown","pushingUp","pushingLeft","pushingRight","newGameOnClick","this","onClick","alert","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbef5cf8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Table = ({ grid }) => {\n  const styleForBlocks = {\n    \"0\": 'rgba(238, 228, 218, 0.35)',\n    \"2\": \"#eee4da\",\n    \"4\": \"#eee1c9\",\n    \"8\": '#f3b27a',\n    \"16\": '#f69664',\n    \"32\": '#f77c5f',\n    \"64\": '#f75f3b',\n    \"128\": '#edd073',\n  }\n  grid = grid.map(arr => (arr.map(el => el.toString())))\n  console.log(grid);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex row justify-content-center\">\n        <div style={{ backgroundColor: styleForBlocks[grid[0][0]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][0] !== '0' ? grid[0][0] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[0][1]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][1] !== '0' ? grid[0][1] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[0][2]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][2] !== '0' ? grid[0][2] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[0][3]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][3] !== '0' ? grid[0][3] : ''}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div style={{ backgroundColor: styleForBlocks[grid[1][0]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][0] !== '0' ? grid[1][0] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[1][1]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][1] !== '0' ? grid[1][1] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[1][2]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][2] !== '0' ? grid[1][2] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[1][3]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][3] !== '0' ? grid[1][3] : ''}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div style={{ backgroundColor: styleForBlocks[grid[2][0]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][0] !== '0' ? grid[2][0] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[2][1]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][1] !== '0' ? grid[2][1] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[2][2]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][2] !== '0' ? grid[2][2] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[2][3]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][3] !== '0' ? grid[2][3] : ''}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div style={{ backgroundColor: styleForBlocks[grid[3][0]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][0] !== '0' ? grid[3][0] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[3][1]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][1] !== '0' ? grid[3][1] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[3][2]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][2] !== '0' ? grid[3][2] : ''}</p>\n        </div>\n        <div style={{ backgroundColor: styleForBlocks[grid[3][3]] }} className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][3] !== '0' ? grid[3][3] : ''}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Header = ({ score, bestScore }) => {\n  return (\n    <div className=\"App-header container-fluid\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col col-lg-2 col-md-2 col-sm-2\">\n          <h5 className=\"btn btn-primary score-card\">Score : {score}</h5>\n        </div>\n        <div className=\"col-md-auto col-sm-2\"></div>\n        <div className=\"col col-lg-2 col-md-2 col-sm-2\">\n          <h5 className=\"btn btn-primary new-game-btn\" >Best Score : {bestScore}</h5>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","const generateRandomElementInArray = (arr) => {\n  // console.log(arr);\n  const el = arr[Math.floor(Math.random() * arr.length)];\n  // console.log(el);\n  return el;\n};\n\n\n\nconst isGameOver = (grid) => {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (grid[i][j] === 0) {\n        return false;\n      }\n      try {\n        if (i < 3 && grid[i][j] === grid[i + 1][j]) {\n          return false;\n        }\n        if (j < 3 && grid[i][j] === grid[i][j + 1]) {\n          return false;\n        }\n      } catch (error) { }\n    }\n  }\n  return true;\n};\n\nexport const fillSpots = (grid) => {\n  let spot;\n  try {\n    let emptySpots = [];\n    const fillOptions = [2, 4];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          emptySpots.push([i, j]);\n        }\n      }\n    }\n    spot = generateRandomElementInArray(emptySpots);\n    let spotNumber = generateRandomElementInArray(fillOptions);\n    grid[spot[0]][spot[1]] = spotNumber;\n    return grid;\n  } catch (error) {\n    console.log(error);\n    return grid\n  }\n};\n\nconst matrixTraversal = (arr) => {\n  let traversedMatrix = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      traversedMatrix[j][i] = arr[i][j];\n    }\n  }\n  return traversedMatrix;\n};\n\nconst zeroPadding = (arr, pushSide) => {\n  //right\n  if (pushSide) {\n    while (arr.length !== 4) {\n      arr = [0].concat(arr);\n    }\n    return arr;\n  } else {\n    while (arr.length !== 4) {\n      arr = arr.concat([0]);\n    }\n    return arr;\n  }\n};\n\nconst slideRight = (arr) => {\n  let score = 0;\n  arr = arr.filter((el) => el);\n  let resArr = [];\n  let i = arr.length - 1;\n  while (i >= 0) {\n    const el = arr[i];\n    if (el === arr[i - 1]) {\n      score += 2 * el;\n      resArr = [2 * el].concat(resArr);\n      // resArr[i - 1] = 0;\n      i -= 2;\n    } else {\n      score += el;\n      resArr = [el].concat(resArr);\n      i--;\n    }\n  }\n  resArr = zeroPadding(resArr, 1);\n  return [resArr, score];\n};\n\nconst slideLeft = (arr) => {\n  let score = 0;\n  arr = arr.filter((el) => el);\n  let resArr = [];\n  let i = 0;\n  while (i < arr.length) {\n    const el = arr[i];\n    if (el === arr[i + 1]) {\n      score += 2 * el;\n      resArr.push(2 * el);\n      // resArr[i - 1] = 0;\n      i += 2;\n    } else {\n      score += el;\n      resArr.push(el);\n      i++;\n    }\n  }\n  resArr = zeroPadding(resArr, 0);\n  return [resArr, score];\n};\n\n// const pushingRight = (grid, score) => {\nexport const pushingRight = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideRight(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingLeft = (grid, score) => {\nexport const pushingLeft = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideLeft(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingUp = (grid, score) => {\nexport const pushingUp = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  grid = matrixTraversal(grid);\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideLeft(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = matrixTraversal(grid);\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingDown = (grid, score) => {\nexport const pushingDown = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  grid = matrixTraversal(grid);\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideRight(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = matrixTraversal(grid);\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// let traversedMatrix = [\n//   [1, 3, 1, 2],\n//   [3, 7, 2, 1],\n//   [2, 3, 1, 0],\n//   [5, 7, 2, 1],\n// ]\n\n// console.log(isGameOver(traversedMatrix));\n\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Header from \"./Header\";\nimport {\n  fillSpots,\n  pushingDown,\n  pushingLeft,\n  pushingUp,\n  pushingRight,\n} from \"../action\";\nimport \"./App.css\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    let a = localStorage.getItem('bestScore')\n    if (!a) {\n      localStorage.setItem('bestScore', 0)\n      a = 0\n    }\n    console.log(a);\n    this.state = {\n      grid: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      score: 0,\n      bestScore: a,\n      gameOverFlag: false,\n      gameOvermessage: ''\n    }\n    fillSpots(this.state.grid)\n    fillSpots(this.state.grid)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"ArrowDown\") {\n        let temp = pushingDown(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowUp\") {\n        let temp = pushingUp(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowLeft\") {\n        let temp = pushingLeft(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowRight\") {\n        let temp = pushingRight(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n\n    });\n  }\n\n  newGameBtnOnClick = () => {\n    console.log('asf');\n    let tempScore\n    let tempGrid = fillSpots([\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ])\n    if (this.state.score > this.state.bestScore) {\n      tempScore = this.state.score;\n      localStorage.setItem('bestScore', tempScore)\n    }\n    else {\n      tempScore = this.state.bestScore\n    }\n    this.setState({\n      grid: tempGrid,\n      score: 0,\n      bestScore: tempScore,\n      gameOvermessage: ''\n    })\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <Header newGameOnClick={this.newGameBtnOnClick} score={this.state.score} bestScore={this.state.bestScore}></Header>\n      {this.state.gameOvermessage ?\n        <div className=\"text-center\">\n          <h2>{this.state.gameOvermessage}</h2>\n        </div> :\n        <Table grid={this.state.grid}></Table>\n      }\n      <div className=\"m-4 reset text-center\">\n        <button className=\"btn btn-primary\" onClick={this.newGameBtnOnClick}>New Game</button>\n      </div>\n    </div>\n    )\n  }\n\n  componentDidUpdate() {\n    if (this.state.gameOverFlag) {\n      alert('game over. Press new game or reset')\n      this.setState({\n        gameOvermessage: 'Game Over!!',\n        gameOverFlag: false\n      })\n\n    }\n    else {\n      if (this.state.gameOvermessage === '') {\n        console.log('a');\n        for (let i = 0; i < this.state.grid.length; i++) {\n          for (let j = 0; j < this.state.grid[i].length; j++) {\n            // console.log(this.state.grid[i][j]);\n            if (this.state.grid[i][j] === 128) {\n              alert('Congratulations!! You Won')\n              this.setState({\n                gameOvermessage: 'Congratulations!! You Won'\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}