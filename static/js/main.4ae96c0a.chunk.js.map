{"version":3,"sources":["components/Table.js","components/Header.js","action.js","components/App.js","index.js"],"names":["Table","grid","className","Header","score","bestScore","generateRandomElementInArray","arr","Math","floor","random","length","isGameOver","i","j","error","fillSpots","spot","emptySpots","push","spotNumber","console","log","matrixTraversal","traversedMatrix","zeroPadding","pushSide","concat","slideRight","filter","el","resArr","slideLeft","App","props","newGameBtnOnClick","tempScore","tempGrid","state","localStorage","setItem","setState","gameOvermessage","a","getItem","gameOverFlag","window","addEventListener","event","key","temp","slideRes","pushingDown","pushingUp","pushingLeft","pushingRight","newGameOnClick","this","onClick","alert","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae96c0a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Table = ({ grid }) => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex row justify-content-center\">\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][0]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][1]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][2]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[0][3]}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][0]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][1]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][2]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[1][3]}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][0]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][1]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][2]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[2][3]}</p>\n        </div>\n      </div>\n      <div className=\"d-flex row justify-content-center\">\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][0]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][1]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][2]}</p>\n        </div>\n        <div className=\"block col-lg-1 col-md-2 col-sm-2\">\n          <p className=\"blockElement\">{grid[3][3]}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Header = ({ score, bestScore }) => {\n  return (\n    <div className=\"App-header container-fluid\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col col-lg-2 col-md-2 col-sm-2\">\n          <h5 className=\"btn btn-primary score-card\">Score : {score}</h5>\n        </div>\n        <div className=\"col-md-auto col-sm-2\"></div>\n        <div className=\"col col-lg-2 col-md-2 col-sm-2\">\n          <h5 className=\"btn btn-primary new-game-btn\" >Best Score : {bestScore}</h5>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","const generateRandomElementInArray = (arr) => {\n  // console.log(arr);\n  const el = arr[Math.floor(Math.random() * arr.length)];\n  // console.log(el);\n  return el;\n};\n\n\n\nconst isGameOver = (grid) => {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (grid[i][j] === 0) {\n        return false;\n      }\n      try {\n        if (i < 3 && grid[i][j] === grid[i + 1][j]) {\n          return false;\n        }\n        if (j < 3 && grid[i][j] === grid[i][j + 1]) {\n          return false;\n        }\n      } catch (error) { }\n    }\n  }\n  return true;\n};\n\nexport const fillSpots = (grid) => {\n  let spot;\n  try {\n    let emptySpots = [];\n    const fillOptions = [2, 4];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          emptySpots.push([i, j]);\n        }\n      }\n    }\n    spot = generateRandomElementInArray(emptySpots);\n    let spotNumber = generateRandomElementInArray(fillOptions);\n    grid[spot[0]][spot[1]] = spotNumber;\n    return grid;\n  } catch (error) {\n    console.log(error);\n    return grid\n  }\n};\n\nconst matrixTraversal = (arr) => {\n  let traversedMatrix = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      traversedMatrix[j][i] = arr[i][j];\n    }\n  }\n  return traversedMatrix;\n};\n\nconst zeroPadding = (arr, pushSide) => {\n  //right\n  if (pushSide) {\n    while (arr.length !== 4) {\n      arr = [0].concat(arr);\n    }\n    return arr;\n  } else {\n    while (arr.length !== 4) {\n      arr = arr.concat([0]);\n    }\n    return arr;\n  }\n};\n\nconst slideRight = (arr) => {\n  let score = 0;\n  arr = arr.filter((el) => el);\n  let resArr = [];\n  let i = arr.length - 1;\n  while (i >= 0) {\n    const el = arr[i];\n    if (el === arr[i - 1]) {\n      score += 2 * el;\n      resArr = [2 * el].concat(resArr);\n      // resArr[i - 1] = 0;\n      i -= 2;\n    } else {\n      score += el;\n      resArr = [el].concat(resArr);\n      i--;\n    }\n  }\n  resArr = zeroPadding(resArr, 1);\n  return [resArr, score];\n};\n\nconst slideLeft = (arr) => {\n  let score = 0;\n  arr = arr.filter((el) => el);\n  let resArr = [];\n  let i = 0;\n  while (i < arr.length) {\n    const el = arr[i];\n    if (el === arr[i + 1]) {\n      score += 2 * el;\n      resArr.push(2 * el);\n      // resArr[i - 1] = 0;\n      i += 2;\n    } else {\n      score += el;\n      resArr.push(el);\n      i++;\n    }\n  }\n  resArr = zeroPadding(resArr, 0);\n  return [resArr, score];\n};\n\n// const pushingRight = (grid, score) => {\nexport const pushingRight = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideRight(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingLeft = (grid, score) => {\nexport const pushingLeft = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideLeft(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingUp = (grid, score) => {\nexport const pushingUp = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  grid = matrixTraversal(grid);\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideLeft(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = matrixTraversal(grid);\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// const pushingDown = (grid, score) => {\nexport const pushingDown = (grid, score) => {\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  grid = matrixTraversal(grid);\n  for (let i = 0; i < 4; i++) {\n    let slideRes = slideRight(grid[i]);\n    grid[i] = slideRes[0];\n    score += slideRes[1];\n  }\n  grid = matrixTraversal(grid);\n  grid = fillSpots(grid)\n  if (isGameOver(grid)) {\n    return [false, grid];\n  }\n  return [grid, score];\n};\n\n// let traversedMatrix = [\n//   [1, 3, 1, 2],\n//   [3, 7, 2, 1],\n//   [2, 3, 1, 0],\n//   [5, 7, 2, 1],\n// ]\n\n// console.log(isGameOver(traversedMatrix));\n\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Header from \"./Header\";\nimport {\n  fillSpots,\n  pushingDown,\n  pushingLeft,\n  pushingUp,\n  pushingRight,\n} from \"../action\";\nimport \"./App.css\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    let a = localStorage.getItem('bestScore')\n    if (!a) {\n      localStorage.setItem('bestScore', 0)\n      a = 0\n    }\n    console.log(a);\n    this.state = {\n      grid: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      score: 0,\n      bestScore: a,\n      gameOverFlag: false,\n      gameOvermessage: ''\n    }\n    fillSpots(this.state.grid)\n    fillSpots(this.state.grid)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"ArrowDown\") {\n        let temp = pushingDown(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowUp\") {\n        let temp = pushingUp(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowLeft\") {\n        let temp = pushingLeft(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n      if (event.key === \"ArrowRight\") {\n        let temp = pushingRight(this.state.grid, this.state.score);\n        if (temp[0] === false) {\n          this.setState({\n            gameOverFlag: true,\n            grid: temp[1]\n          })\n        }\n        else {\n          this.setState({\n            grid: temp[0],\n            score: temp[1]\n          });\n        }\n      }\n\n    });\n  }\n\n  newGameBtnOnClick = () => {\n    console.log('asf');\n    let tempScore\n    let tempGrid = fillSpots([\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ])\n    if (this.state.score > this.state.bestScore) {\n      tempScore = this.state.score;\n      localStorage.setItem('bestScore', tempScore)\n    }\n    else {\n      tempScore = this.state.bestScore\n    }\n    this.setState({\n      grid: tempGrid,\n      score: 0,\n      bestScore: tempScore,\n      gameOvermessage: ''\n    })\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <Header newGameOnClick={this.newGameBtnOnClick} score={this.state.score} bestScore={this.state.bestScore}></Header>\n      {this.state.gameOvermessage ?\n        <div className=\"text-center\">\n          <h2>{this.state.gameOvermessage}</h2>\n        </div> :\n        <Table grid={this.state.grid}></Table>\n      }\n      <div className=\"m-4 reset text-center\">\n        <button className=\"btn btn-primary\" onClick={this.newGameBtnOnClick}>New Game</button>\n      </div>\n    </div>\n    )\n  }\n\n  componentDidUpdate() {\n    if (this.state.gameOverFlag) {\n      alert('game over. Press new game or reset')\n      this.setState({\n        gameOvermessage: 'Game Over!!',\n        gameOverFlag: false\n      })\n\n    }\n    else {\n      if (this.state.gameOvermessage === '') {\n        console.log('a');\n        for (let i = 0; i < this.state.grid.length; i++) {\n          for (let j = 0; j < this.state.grid[i].length; j++) {\n            // console.log(this.state.grid[i][j]);\n            if (this.state.grid[i][j] === 128) {\n              alert('Congratulations!! You Won')\n              this.setState({\n                gameOvermessage: 'Congratulations!! You Won'\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}